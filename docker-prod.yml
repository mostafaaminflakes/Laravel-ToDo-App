version: "3.9"

networks:
  laravel_todo:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_server
    ports:
      - "$DEFAULT_NGINX_REMOTE_PORT_HTTP:$DEFAULT_NGINX_LOCAL_PORT_HTTP" # Local/Remote, From host/Inside container
      # - "443:443"
    volumes:
      - $DEFAULT_VOLUME_REMOTE:$DEFAULT_VOLUME_LOCAL
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel_todo

  mysql:
    image: mysql:5.7.22
    container_name: database
    restart: unless-stopped
    tty: true
    ports:
      - "$MYSQL_REMOTE_PORT:$MYSQL_LOCAL_PORT"
    # volumes:
    #   - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: $DB_DATABASE
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel_todo

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web_php
    volumes:
      - $DEFAULT_VOLUME_REMOTE:$DEFAULT_VOLUME_LOCAL
    ports:
      - "9000:9000"
    networks:
      - laravel_todo

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - $DEFAULT_VOLUME_REMOTE:$DEFAULT_VOLUME_LOCAL
    working_dir: $DEFAULT_VOLUME_LOCAL
    networks:
      - laravel_todo

  npm:
    image: node:16
    container_name: npm
    volumes:
      - $DEFAULT_VOLUME_REMOTE:$DEFAULT_VOLUME_LOCAL
    working_dir: $DEFAULT_VOLUME_LOCAL
    entrypoint: ["npm"]
    networks:
      - laravel_todo

  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan
    volumes:
      - $DEFAULT_VOLUME_REMOTE:$DEFAULT_VOLUME_LOCAL
    depends_on:
      - mysql
    working_dir: $DEFAULT_VOLUME_LOCAL
    entrypoint: ["$DEFAULT_VOLUME_LOCAL/artisan"]
    networks:
      - laravel_todo
